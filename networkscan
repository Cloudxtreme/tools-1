#!/bin/bash
#
# Usage: ./netbusscan ip1 ip2
#
# This script...
#
# Author: James Mills (prologic@shortcircuit.net.au)
# Version: 0.1.0 CopyRight 2004 (C) by James Mills
# Version: 0.1.1 "Updated: correct usage message"
#

function ip2dec {
	hexval=`printf "%02x%02x%02x%02x" ${1//./ }`
	decadd=$((16#$hexval))
	echo $decadd
}

function dec2ip {
	decval=`printf "%08x" ${1}`
	echo $((16#${decval:0:2})).$((16#${decval:2:2})).$((16#${decval:4:2})).$((16#${decval:6:2}))
}

function scan {
	if [ $verbose = 1 ]; then
		echo -n "Scanning ${1}:${2} "
	fi
	nc -q 0 -z -w 1 ${1} ${2} 1> /dev/null 2> /dev/null
	re=$?
	if  [ $re = 0 ]; then
		if [ $verbose = 1 ]; then
			echo "OPEN"
		else
			echo "${1}:${2} OPEN"
		fi
	else
		if [ $verbose = 1 ]; then
			echo "CLOSED"
		fi
	fi
}

function quit {
	exit
}

function error {
	case ${1} in
	netcat) echo "ERROR: netcat not installed!"; exit 1;;
	*) exit 1;;
	esac
}

test -f /bin/nc || error 'netcat'

trap "quit" INT

usage="Usage: $0 [-v] network port"
verbose=0

while getopts "ihv-" opt ; do
	case "$opt" in
	v) verbose=1;;
	h) echo $usage; exit 0;;
	-) break;;
	*) echo $usage 1>&2; exit 1;;
	esac
done

shift $(($OPTIND - 1))

tmp=${1}
port=${2}

if [[ $tmp = "" || $port = "" ]]; then
	echo $usage 1>&2
	exit 1
fi

network=${tmp%/*}
mask=${tmp#*/}

#TODO: Make this into a function
ip1=`ip2dec $network`
range=`echo '2^(32-'$mask')' | bc`
ip2=$((ip1 + range))

for ((i = $ip1; i < $ip2; i++)); do
	ip=`dec2ip $i`
	scan $ip $port
done

exit 0
