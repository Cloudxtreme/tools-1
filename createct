#!/usr/bin/env python

import re
import sys
import time
import logging
logging.disable(logging.DEBUG)

import proxmox

if len(sys.argv) != 4:
    print("Usage: createct CTID ADDRESS HOSTNAME")
    raise SystemExit(1)

ctid = sys.argv[1]
address = sys.argv[2]
hostname = sys.argv[3]

# connect to one of the proxmox nodes and get authenticated
c = proxmox.Connector("vz1")
c.get_auth_token("root@pam", "p@ssw0rd1")

# connect to the node you wish to perform actions on.
node = proxmox.Node(c, "vz1")

# find the path for the template you want to use.
for template in node.storage("local").content(content="vztmpl"):
    if re.match(".*centos-6-standard_6.3-1_x86_64.tar.gz$", template["volid"]):
        volume = node.storage("local").content(template["volid"]).get()

# create the container, giving it some sensible settings
taskid = node.openvz.post(
    cpus=1,
    disk=4,
    onboot="1",
    memory=1024,
    vmid=int(ctid),
    storage="local",
    hostname=hostname,
    ip_address=address,
    password="p@ssw0rd1",
    searchdomain="local",
    nameserver="10.0.0.1",
    ostemplate=volume.get("path")
)

# keep an eye on task and see when its completed
while node.tasks(taskid).status()["status"] == "running":
        time.sleep(1)

# print out the logs
for line in node.tasks(taskid).log():
    print line["t"]

try:
    # start up the container
    taskid = node.openvz(ctid).status.start.post()

    # keep an eye on task and see when its completed
    while node.tasks(taskid).status()["status"] == "running":
            time.sleep(1)

    # print out the logs
    for line in node.tasks(taskid).log():
        print line["t"]
except:
    raise Exception("Unable to start container")
