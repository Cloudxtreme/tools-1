#!/bin/bash
#
#  sshkeyman
# 
#  Copyright (C) 2005 James Mills
# 
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, 
#  USA.
#

VERSION="1.0"

SSH_OPTS="-t -C -q"
CLEANUP_CMD="rm -f ~/.ssh/authorized_keys2; rm -f ~/.ssh/id_dsa*;"
RECREATE_CMD="ssh-keygen -t dsa -f ~/.ssh/id_dsa;"
SECURE_CMD="chmod 700 ~/.ssh; chmod 600 ~/.ssh/*;"
COPY_CMD="cat ~/id_dsa.pub >> ~/.ssh/authorized_keys2;"
REMOVE_CMD="rm -f ~/id_dsa.pub;"

TMP_DIR=`mktemp -d`
KEY_PATH=$TMP_DIR

create_key() {
	machine=${1}
	echo "*** $machine ***"
	echo
	echo "Removing and Recreating keys on $machine ..."
	ssh $machine $SSH_OPTS $CLEANUP_CMD $RECREATE_CMD $SECURE_CMD
	echo "Creating Local Copy of key for $machine ..."
	mkdir -p "$KEY_PATH/$machine"
	echo "Retrieving key from $machine ..."
	scp "$machine:~/.ssh/id_dsa.pub" "$KEY_PATH/$machine/"
	echo
}

create_keys() {
	echo "*** Creating Keys ***"
	echo
	for machine in ${OPT_MACHINES[*]}; do
		create_key $machine
	done
}

distribute_key() {
	machineSRC=${1}
	machineDEST=${2}
	echo "*** $machineSRC -> $machineDEST ***"
	echo
	echo "Copying $machineSRC's Key to $machineDEST ..."
	scp "$KEY_PATH/$machineSRC/id_dsa.pub" "$machineDEST:~/"
	ssh $machineDEST $SSH_OPTS $COPY_CMD $REMOVE_CMD $SECURE_CMD
	echo
}

distribute_keys() {
	echo "*** Distributing Keys ***"
	echo
	for machineSRC in ${OPT_MACHINES[*]}; do
		for machineDEST in ${OPT_MACHINES[*]}; do
			distribute_key $machineSRC $machineDEST
		done
	done
}

print_help() {
	echo "usage: $COMMAND [options] machines"
	echo "options:"
	echo "   -c, --create       create keys"
	echo "   -d, --distribute   distribute keys"
	echo "   -p, --path         key path"
	echo "   -v, --version      print version and exit"
	echo "   -h, --help         print help and exit"
}

print_try_help() {
	echo "Try '$COMMAND --help' for more information."
}

parse_options() {
	OPT_MODE=""
	OPT_MACHINES=()

	while getopts "cdp:vh-" OPT ; do
		case $OPT in
			c)
				OPT_MODE="create" ;;
			d)
				OPT_MODE="distribute" ;;
			p)
				KEY_PATH="$OPTARG" ;;
			v)
				echo "$COMMAND $VERSION"
				exit 0 ;;
			h)
				print_help
				exit 0 ;;
		esac
	done

	shift $(($OPTIND - 1))

	for OPT in "$@"; do
		OPT_MACHINES=(${OPT_MACHINES[*]} $OPT)
	done

}

main() {
	parse_options "$@"

	if [ "$OPT_MODE" = "create" ]; then
		create_keys $OPT_MACHINES
	elif [ "$OPT_MODE" = "distribute" ]; then 
		distribute_keys $OPT_MACHINES
	else
		echo "$COMMAND: option missing"
		print_try_help
		exit 1
	fi

	exit 0
}

### Main

COMMAND=`basename $0`

main "$@"

#n End of File
